[
["index.html", "R Packages for Noncompartmental Analysis Preface", " R Packages for Noncompartmental Analysis Kyun-Seop Bae Sungpil Han 2017-01-25 Preface In this book, we will cover R Packages for Noncompartmental Analysis. "],
["introduction.html", "Chapter 1 Introduction", " Chapter 1 Introduction There are growing number of open source noncompartmental analysis R packages and we will compare, review and discuss them. "],
["comparison-of-noncompartmental-analysis-software.html", "Chapter 2 Comparison of Noncompartmental analysis software 2.1 Certara Phoenix WinNonLin 2.2 R package: PKNCA 2.3 R package: ncar 2.4 R package: ncappc 2.5 R package: PK", " Chapter 2 Comparison of Noncompartmental analysis software We will perform NCA with a dataset Theoph and compare Cmax and AUCinf calculated by each software or package. 2.1 Certara Phoenix WinNonLin https://www.certara.com/software/pkpd-modeling-and-simulation/phoenix-winnonlin/ 2.1.0.1 Pros Validated for several years Industry standard Versatile unit setting Easy using by GUI Generating plots supported 2.1.0.2 Cons Expansive (~several thousand dollars) Not suitable for reproducible research CDISC SDTM not compatible (input and output) 2.2 R package: PKNCA https://github.com/billdenney/pknca 2.2.0.1 Pros Open source and free of charge CDISC SDTM semi compatible (output) Calculate partial(interval) AUC with ‘linear’ or ‘log’ interpolation method but in a cumbersome way 2.2.0.2 Cons CDISC SDTM not compatible (input) More tests required Experience with R language required Generating plots not supported for now (To be supported soon) 2.3 R package: ncar Extension of NonCompart for CDISC input https://github.com/asancpt/ncar 2.3.0.1 Pros Open source and free of charge CDISC SDTM fully compatible (input - DM, EX, PC) Output of CDISC SDTM PP domain terms Calculate partial(interval) AUC with ‘linear’ or ‘log’ interpolation method 2.3.0.2 Cons More tests required Experience with R language required Generating plots not supported for now (To be supported soon) 2.4 R package: ncappc NCA Calculation and Population PK Model Diagnosis https://cran.r-project.org/web/packages/ncappc/index.html https://www.ncbi.nlm.nih.gov/pubmed/27000291 #install.packages(&quot;ncappc&quot;) #library(ncappc) # Broken Link 2.5 R package: PK Basic Non-Compartmental Pharmacokinetics https://cran.r-project.org/web/packages/PK/index.html #install.packages(&quot;PK&quot;) library(PK) ## ********** PK Version 1.3-3********** ## Type PKNews() to see new features/changes/bug fixes. "],
["details.html", "Chapter 3 Details 3.1 ncar 3.2 PKNCA: Automation of Noncompartmental Analysis in R", " Chapter 3 Details 3.1 ncar library(ncar) NCA(Theoph, &quot;Subject&quot;, &quot;Time&quot;, &quot;conc&quot;, Dose=320) ## Subject CMAX CMAXD TMAX TLAG CLST CLSTP TLST LAMZHL ## 1 1 10.50 0.03281250 1.12 0 3.28 3.2801465 24.37 14.304378 ## 2 2 8.33 0.02603125 1.92 0 0.90 0.8886398 24.30 6.659342 ## 3 3 8.20 0.02562500 1.02 0 1.05 1.0550967 24.17 6.766087 ## 4 4 8.60 0.02687500 1.07 0 1.15 1.1564216 24.65 6.981247 ## 5 5 11.40 0.03562500 1.00 0 1.57 1.5556951 24.35 8.002264 ## 6 6 6.44 0.02012500 1.15 0 0.92 0.9412712 23.85 7.894998 ## 7 7 7.09 0.02215625 3.48 0 1.15 1.1607192 24.22 7.846668 ## 8 8 7.56 0.02362500 2.02 0 1.25 1.2285268 24.12 8.510038 ## 9 9 9.03 0.02821875 0.63 0 1.12 1.1164831 24.43 8.405999 ## 10 10 10.21 0.03190625 3.55 0 2.42 2.4136923 23.70 9.246916 ## 11 11 8.00 0.02500000 0.98 0 0.86 0.8598066 24.08 7.261237 ## 12 12 9.75 0.03046875 3.52 0 1.17 1.1755390 24.15 6.286508 ## LAMZ LAMZLL LAMZUL LAMZNPT CORRXY R2 R2ADJ ## 1 0.04845700 9.05 24.37 3 -0.9999999 0.9999997 0.9999995 ## 2 0.10408644 7.03 24.30 4 -0.9985967 0.9971954 0.9957931 ## 3 0.10244431 9.00 24.17 3 -0.9996624 0.9993250 0.9986499 ## 4 0.09928702 9.02 24.65 3 -0.9994619 0.9989241 0.9978483 ## 5 0.08661888 7.02 24.35 4 -0.9993234 0.9986472 0.9979708 ## 6 0.08779574 2.03 23.85 7 -0.9991203 0.9982413 0.9978896 ## 7 0.08833650 6.98 24.22 4 -0.9993349 0.9986702 0.9980053 ## 8 0.08145054 3.53 24.12 6 -0.9954961 0.9910124 0.9887655 ## 9 0.08245863 8.80 24.43 3 -0.9997218 0.9994437 0.9988873 ## 10 0.07495982 9.38 23.70 3 -0.9997543 0.9995087 0.9990174 ## 11 0.09545856 9.03 24.08 3 -0.9999991 0.9999983 0.9999965 ## 12 0.11025949 9.03 24.15 3 -0.9996984 0.9993968 0.9987936 ## AUCLST AUCALL AUCIFO AUCIFOD AUCPEO AUCIFP AUCIFPD ## 1 148.92305 148.92305 216.61193 0.6769123 31.248917 216.61496 0.6769217 ## 2 91.52680 91.52680 100.17346 0.3130421 8.631687 100.06432 0.3127010 ## 3 99.28650 99.28650 109.53597 0.3422999 9.357173 109.58572 0.3424554 ## 4 106.79630 106.79630 118.37888 0.3699340 9.784331 118.44356 0.3701361 ## 5 121.29440 121.29440 139.41978 0.4356868 13.000579 139.25463 0.4351707 ## 6 73.77555 73.77555 84.25442 0.2632951 12.437174 84.49670 0.2640522 ## 7 90.75340 90.75340 103.77180 0.3242869 12.545221 103.89315 0.3246661 ## 8 88.55995 88.55995 103.90669 0.3247084 14.769730 103.64305 0.3238845 ## 9 86.32615 86.32615 99.90872 0.3122147 13.594978 99.86607 0.3120815 ## 10 138.36810 138.36810 170.65206 0.5332877 18.918002 170.56791 0.5330247 ## 11 80.09360 80.09360 89.10274 0.2784461 10.110962 89.10072 0.2784397 ## 12 119.97750 119.97750 130.58883 0.4080901 8.125757 130.63907 0.4082471 ## AUCPEP AUMCLST AUMCIFO AUMCPEO AUMCIFP AUMCPEP MRTEVLST ## 1 31.249876 1459.0711 4505.5348 67.61603 4505.6709 67.61701 9.797483 ## 2 8.532030 706.5866 999.7723 29.32525 996.0716 29.06267 7.719996 ## 3 9.398325 803.1859 1150.9648 30.21629 1152.6529 30.31850 8.089578 ## 4 9.833594 901.0842 1303.2524 30.85881 1305.4981 30.97775 8.437410 ## 5 12.897403 1017.1143 1667.7216 39.01174 1661.7937 38.79419 8.385501 ## 6 12.688246 609.1524 978.4285 37.74176 986.9665 38.28034 8.256833 ## 7 12.647366 782.4199 1245.0984 37.16000 1249.4111 37.37691 8.621383 ## 8 14.552931 739.5346 1298.1158 43.03015 1288.5201 42.60589 8.350666 ## 9 13.558076 705.2296 1201.7715 41.31750 1200.2124 41.24126 8.169363 ## 10 18.878001 1278.1800 2473.9934 48.33535 2470.8765 48.27018 9.237534 ## 11 10.108918 617.2422 928.5600 33.52694 928.4900 33.52193 7.706511 ## 12 8.161087 977.8807 1330.3840 26.49636 1332.0528 26.58844 8.150534 ## MRTEVIFO MRTEVIFP VZFO VZFP CLFO CLFP ## 1 20.800031 20.800368 30.48675 30.48632 1.477296 1.477276 ## 2 9.980411 9.954313 30.69044 30.72392 3.194459 3.197943 ## 3 10.507642 10.518276 28.51710 28.50415 2.921415 2.920088 ## 4 11.009163 11.022112 27.22596 27.21110 2.703185 2.701709 ## 5 11.961873 11.933490 26.49799 26.52942 2.295227 2.297949 ## 6 11.612785 11.680533 43.25973 43.13569 3.798020 3.787130 ## 7 11.998427 12.025924 34.90844 34.86767 3.083689 3.080088 ## 8 12.493092 12.432287 37.81051 37.90669 3.079686 3.087520 ## 9 12.028695 12.018220 38.84279 38.85938 3.202924 3.204292 ## 10 14.497296 14.486174 25.01554 25.02788 1.875160 1.876086 ## 11 10.421227 10.420679 37.62219 37.62304 3.591360 3.591441 ## 12 10.187579 10.196436 22.22429 22.21575 2.450439 2.449497 iAUC = data.frame(Name=c(&quot;AUC[0-12h]&quot;,&quot;AUC[0-24h]&quot;), Start=c(0,0), End=c(12,24)) ; iAUC ## Name Start End ## 1 AUC[0-12h] 0 12 ## 2 AUC[0-24h] 0 24 NCA(Theoph, &quot;Subject&quot;, &quot;Time&quot;, &quot;conc&quot;, Dose=320, iAUC=iAUC) ## Subject CMAX CMAXD TMAX TLAG CLST CLSTP TLST LAMZHL ## 1 1 10.50 0.03281250 1.12 0 3.28 3.2801465 24.37 14.304378 ## 2 2 8.33 0.02603125 1.92 0 0.90 0.8886398 24.30 6.659342 ## 3 3 8.20 0.02562500 1.02 0 1.05 1.0550967 24.17 6.766087 ## 4 4 8.60 0.02687500 1.07 0 1.15 1.1564216 24.65 6.981247 ## 5 5 11.40 0.03562500 1.00 0 1.57 1.5556951 24.35 8.002264 ## 6 6 6.44 0.02012500 1.15 0 0.92 0.9412712 23.85 7.894998 ## 7 7 7.09 0.02215625 3.48 0 1.15 1.1607192 24.22 7.846668 ## 8 8 7.56 0.02362500 2.02 0 1.25 1.2285268 24.12 8.510038 ## 9 9 9.03 0.02821875 0.63 0 1.12 1.1164831 24.43 8.405999 ## 10 10 10.21 0.03190625 3.55 0 2.42 2.4136923 23.70 9.246916 ## 11 11 8.00 0.02500000 0.98 0 0.86 0.8598066 24.08 7.261237 ## 12 12 9.75 0.03046875 3.52 0 1.17 1.1755390 24.15 6.286508 ## LAMZ LAMZLL LAMZUL LAMZNPT CORRXY R2 R2ADJ ## 1 0.04845700 9.05 24.37 3 -0.9999999 0.9999997 0.9999995 ## 2 0.10408644 7.03 24.30 4 -0.9985967 0.9971954 0.9957931 ## 3 0.10244431 9.00 24.17 3 -0.9996624 0.9993250 0.9986499 ## 4 0.09928702 9.02 24.65 3 -0.9994619 0.9989241 0.9978483 ## 5 0.08661888 7.02 24.35 4 -0.9993234 0.9986472 0.9979708 ## 6 0.08779574 2.03 23.85 7 -0.9991203 0.9982413 0.9978896 ## 7 0.08833650 6.98 24.22 4 -0.9993349 0.9986702 0.9980053 ## 8 0.08145054 3.53 24.12 6 -0.9954961 0.9910124 0.9887655 ## 9 0.08245863 8.80 24.43 3 -0.9997218 0.9994437 0.9988873 ## 10 0.07495982 9.38 23.70 3 -0.9997543 0.9995087 0.9990174 ## 11 0.09545856 9.03 24.08 3 -0.9999991 0.9999983 0.9999965 ## 12 0.11025949 9.03 24.15 3 -0.9996984 0.9993968 0.9987936 ## AUCLST AUCALL AUCIFO AUCIFOD AUCPEO AUCIFP AUCIFPD ## 1 148.92305 148.92305 216.61193 0.6769123 31.248917 216.61496 0.6769217 ## 2 91.52680 91.52680 100.17346 0.3130421 8.631687 100.06432 0.3127010 ## 3 99.28650 99.28650 109.53597 0.3422999 9.357173 109.58572 0.3424554 ## 4 106.79630 106.79630 118.37888 0.3699340 9.784331 118.44356 0.3701361 ## 5 121.29440 121.29440 139.41978 0.4356868 13.000579 139.25463 0.4351707 ## 6 73.77555 73.77555 84.25442 0.2632951 12.437174 84.49670 0.2640522 ## 7 90.75340 90.75340 103.77180 0.3242869 12.545221 103.89315 0.3246661 ## 8 88.55995 88.55995 103.90669 0.3247084 14.769730 103.64305 0.3238845 ## 9 86.32615 86.32615 99.90872 0.3122147 13.594978 99.86607 0.3120815 ## 10 138.36810 138.36810 170.65206 0.5332877 18.918002 170.56791 0.5330247 ## 11 80.09360 80.09360 89.10274 0.2784461 10.110962 89.10072 0.2784397 ## 12 119.97750 119.97750 130.58883 0.4080901 8.125757 130.63907 0.4082471 ## AUCPEP AUMCLST AUMCIFO AUMCPEO AUMCIFP AUMCPEP MRTEVLST ## 1 31.249876 1459.0711 4505.5348 67.61603 4505.6709 67.61701 9.797483 ## 2 8.532030 706.5866 999.7723 29.32525 996.0716 29.06267 7.719996 ## 3 9.398325 803.1859 1150.9648 30.21629 1152.6529 30.31850 8.089578 ## 4 9.833594 901.0842 1303.2524 30.85881 1305.4981 30.97775 8.437410 ## 5 12.897403 1017.1143 1667.7216 39.01174 1661.7937 38.79419 8.385501 ## 6 12.688246 609.1524 978.4285 37.74176 986.9665 38.28034 8.256833 ## 7 12.647366 782.4199 1245.0984 37.16000 1249.4111 37.37691 8.621383 ## 8 14.552931 739.5346 1298.1158 43.03015 1288.5201 42.60589 8.350666 ## 9 13.558076 705.2296 1201.7715 41.31750 1200.2124 41.24126 8.169363 ## 10 18.878001 1278.1800 2473.9934 48.33535 2470.8765 48.27018 9.237534 ## 11 10.108918 617.2422 928.5600 33.52694 928.4900 33.52193 7.706511 ## 12 8.161087 977.8807 1330.3840 26.49636 1332.0528 26.58844 8.150534 ## MRTEVIFO MRTEVIFP VZFO VZFP CLFO CLFP AUC[0-12h] ## 1 20.800031 20.800368 30.48675 30.48632 1.477296 1.477276 91.73552 ## 2 9.980411 9.954313 30.69044 30.72392 3.194459 3.197943 67.48030 ## 3 10.507642 10.518276 28.51710 28.50415 2.921415 2.920088 70.17971 ## 4 11.009163 11.022112 27.22596 27.21110 2.703185 2.701709 73.05115 ## 5 11.961873 11.933490 26.49799 26.52942 2.295227 2.297949 84.61490 ## 6 11.612785 11.680533 43.25973 43.13569 3.798020 3.787130 51.75887 ## 7 11.998427 12.025924 34.90844 34.86767 3.083689 3.080088 62.09875 ## 8 12.493092 12.432287 37.81051 37.90669 3.079686 3.087520 62.71486 ## 9 12.028695 12.018220 38.84279 38.85938 3.202924 3.204292 60.12123 ## 10 14.497296 14.486174 25.01554 25.02788 1.875160 1.876086 90.81742 ## 11 10.421227 10.420679 37.62219 37.62304 3.591360 3.591441 58.53963 ## 12 10.187579 10.196436 22.22429 22.21575 2.450439 2.449497 85.02136 ## AUC[0-24h] ## 1 147.69459 ## 2 91.24908 ## 3 99.10481 ## 4 105.99811 ## 5 120.73101 ## 6 73.91422 ## 7 90.49567 ## 8 88.40890 ## 9 85.82985 ## 10 139.08507 ## 11 80.02431 ## 12 119.79884 3.2 PKNCA: Automation of Noncompartmental Analysis in R 3.2.1 ISoP Pharmacometrics Study Group Presentation 강의 동영상 https://www.youtube.com/watch?v=WCmFrheYtcc 프로젝트 https://github.com/billdenney/pknca Package https://cran.r-project.org/web/packages/PKNCA/ 예제 R Markdown 파일 : https://github.com/billdenney/pknca/tree/master/vignettes PPT 파일 PKNCA 패키지란 무엇인가? * Pharmacokinetic(PK) data를 위한 모든 noncompartmental analysis (NCA) 계산이 가능한 R용 패키지 library(devtools) install_github(&quot;billdenney/pknca&quot;) 3.2.2 오픈소스 NCA - 지금이 적기이다. Data standards 가 점점 많아짐 CDISC/SDTM가 FDA requirement CDISC ADaM working group is standardizing NCA data set (ADNCA) | CDISC SDTM pharmacokinetic concentration (PC) and pharmacokinetic parameter (PP) domains have been standardized 우리도 R로 NCA? 3.2.3 할수 있는 것 Organizes concentration/time and dose/time data Predicts what you most likely need from NCA parameters from the concentration and dosing data. Allows user control of all NCA parameter and summary calculations Calculates all (standard) NCA parameters (Targeting the SDTM PK 파라메터) Summarizes the parameters 3.2.4 한계 그래픽 못그림 파라메터의 statistics 못구함 (곧 기능 추가할듯) 3.2.5 PKNCA 현재는 0.7 NCA 파라메터 계산가능 (Cmax, Tmax, AUClast, AUCinf, AUMC, half-life, …) NCA-related calculations (Superposition, Concentration interpolation/extrapolation (with AUC methods), Time to steady-state) SDTM PP-READY OUTPUT 가능 인풋에서 아웃풋까지 TRACK가능하다. 800개 넘는 테스트 케이스가 있음. 3.2.6 PKNCA 곧 1.0이 나올것이다. Improved prediction of desired parameters (정확도 accuracy, number 등) 3.2.7 참고사항 Github에서 모두 다운로드 가능 CRAN에 package올라왔다. (0.7) https://cran.r-project.org/web/packages/PKNCA/ wdenney@humanpredictions.com 으로 메일 보내라 모든게 오픈이기 때문에 Github에서 기여 환영 3.2.8 RStudio를 사용한 Hands-on 실습 3.2.8.1 Example-theophylline.Rmd Theophylline 농도를 가지고 PK Parameter 구하는 법 https://raw.githubusercontent.com/billdenney/pknca/master/vignettes/Example-theophylline.Rmd 이 파일을 RStudio에서 실행해본다. 이후 article에서 분석할 것입니다. 3.2.8.2 Superposition.Rmd https://raw.githubusercontent.com/billdenney/pknca/master/vignettes/Superposition.Rmd 이 파일을 RStudio에서 실행해본다. 3.2.9 Closing PKNCA.options() 모든 옵션을 볼 수 있다. 3.2.10 결론 써보고 feedback주고 contribute해라. ## It is always a good idea to look at the data knitr::kable(head(datasets::Theoph)) Subject Wt Dose Time conc 1 79.6 4.02 0.00 0.74 1 79.6 4.02 0.25 2.84 1 79.6 4.02 0.57 6.57 1 79.6 4.02 1.12 10.50 1 79.6 4.02 2.02 9.66 1 79.6 4.02 3.82 8.58 ## By default it is groupedData; convert it to a data frame for use my.conc &lt;- PKNCAconc(as.data.frame(datasets::Theoph), conc~Time|Subject) ## Dosing data needs to only have one row per dose, so subset for ## that first. d.dose &lt;- unique(datasets::Theoph[datasets::Theoph$Time == 0, c(&quot;Dose&quot;, &quot;Time&quot;, &quot;Subject&quot;)]) knitr::kable(d.dose, caption=&quot;Example dosing data extracted from theophylline data set&quot;) Table 3.1: Example dosing data extracted from theophylline data set Dose Time Subject 1 4.02 0 1 12 4.40 0 2 23 4.53 0 3 34 4.40 0 4 45 5.86 0 5 56 4.00 0 6 67 4.95 0 7 78 4.53 0 8 89 3.10 0 9 100 5.50 0 10 111 4.92 0 11 122 5.30 0 12 my.dose &lt;- PKNCAdose(d.dose, Dose~Time|Subject) my.data.automatic &lt;- PKNCAdata(my.conc, my.dose) knitr::kable(PKNCA.options(&quot;single.dose.aucs&quot;)) start end auclast aucall aumclast aumcall cmax cmin tmax tlast tfirst clast.obs f mrt mrt.last cav ctrough ptr tlag half.life r.squared adj.r.squared lambda.z lambda.z.time.first lambda.z.n.points clast.pred span.ratio thalf.eff kel aucinf aumcinf aucpext cl vz vss vd 0 24 TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE 0 Inf FALSE FALSE FALSE FALSE TRUE FALSE TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE TRUE FALSE FALSE FALSE FALSE FALSE FALSE knitr::kable(my.data.automatic$intervals) start end auclast aucall aumclast aumcall cmax cmin tmax tlast tfirst clast.obs f mrt mrt.last cav ctrough ptr tlag half.life r.squared adj.r.squared lambda.z lambda.z.time.first lambda.z.n.points clast.pred span.ratio thalf.eff kel aucinf aumcinf aucpext cl vz vss vd Subject 0 24 TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE 1 0 Inf FALSE FALSE FALSE FALSE TRUE FALSE TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE TRUE FALSE FALSE FALSE FALSE FALSE FALSE 1 0 24 TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE 2 0 Inf FALSE FALSE FALSE FALSE TRUE FALSE TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE TRUE FALSE FALSE FALSE FALSE FALSE FALSE 2 0 24 TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE 3 0 Inf FALSE FALSE FALSE FALSE TRUE FALSE TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE TRUE FALSE FALSE FALSE FALSE FALSE FALSE 3 0 24 TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE 4 0 Inf FALSE FALSE FALSE FALSE TRUE FALSE TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE TRUE FALSE FALSE FALSE FALSE FALSE FALSE 4 0 24 TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE 5 0 Inf FALSE FALSE FALSE FALSE TRUE FALSE TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE TRUE FALSE FALSE FALSE FALSE FALSE FALSE 5 0 24 TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE 6 0 Inf FALSE FALSE FALSE FALSE TRUE FALSE TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE TRUE FALSE FALSE FALSE FALSE FALSE FALSE 6 0 24 TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE 7 0 Inf FALSE FALSE FALSE FALSE TRUE FALSE TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE TRUE FALSE FALSE FALSE FALSE FALSE FALSE 7 0 24 TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE 8 0 Inf FALSE FALSE FALSE FALSE TRUE FALSE TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE TRUE FALSE FALSE FALSE FALSE FALSE FALSE 8 0 24 TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE 9 0 Inf FALSE FALSE FALSE FALSE TRUE FALSE TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE TRUE FALSE FALSE FALSE FALSE FALSE FALSE 9 0 24 TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE 10 0 Inf FALSE FALSE FALSE FALSE TRUE FALSE TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE TRUE FALSE FALSE FALSE FALSE FALSE FALSE 10 0 24 TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE 11 0 Inf FALSE FALSE FALSE FALSE TRUE FALSE TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE TRUE FALSE FALSE FALSE FALSE FALSE FALSE 11 0 24 TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE 12 0 Inf FALSE FALSE FALSE FALSE TRUE FALSE TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE TRUE FALSE FALSE FALSE FALSE FALSE FALSE 12 my.intervals &lt;- data.frame(start=0, end=Inf, cmax=TRUE, tmax=TRUE, aucinf.obs=TRUE, auclast=TRUE) my.data.manual &lt;- PKNCAdata(my.conc, my.dose, intervals=my.intervals) knitr::kable(my.data.manual$intervals) start end auclast aucall aumclast aumcall cmax cmin tmax tlast tfirst clast.obs f mrt mrt.last cav ctrough ptr tlag half.life r.squared adj.r.squared lambda.z lambda.z.time.first lambda.z.n.points clast.pred span.ratio thalf.eff kel aucinf aumcinf aucpext cl vz vss vd aucinf.obs 0 Inf TRUE FALSE FALSE FALSE TRUE FALSE TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE TRUE my.results.automatic &lt;- pk.nca(my.data.automatic) knitr::kable(head(my.results.automatic$result)) start end Subject PPTESTCD PPORRES 0 24 1 auclast 92.3654416 0 Inf 1 cmax 10.5000000 0 Inf 1 tmax 1.1200000 0 Inf 1 tlast 24.3700000 0 Inf 1 lambda.z 0.0484570 0 Inf 1 r.squared 0.9999997 summary(my.results.automatic) start end auclast cmax tmax half.life aucinf 0 24 74.6 [24.3] . . . . 0 Inf . 8.65 [17.0] 1.14 [0.630, 3.55] 8.18 [2.12] 115 [28.4] my.results.manual &lt;- pk.nca(my.data.manual) knitr::kable(head(my.results.manual$result)) start end Subject PPTESTCD PPORRES 0 Inf 1 auclast 147.23475 0 Inf 1 cmax 10.50000 0 Inf 1 tmax 1.12000 0 Inf 2 auclast 88.73128 0 Inf 2 cmax 8.33000 0 Inf 2 tmax 1.92000 summary(my.results.manual) ## Warning in summary.PKNCAresults(my.results.manual): No results to summarize ## for aucinf.obs in result row 1 start end auclast cmax tmax aucinf.obs 0 Inf 98.7 [22.5] 8.65 [17.0] 1.14 [0.630, 3.55] . "]
]
